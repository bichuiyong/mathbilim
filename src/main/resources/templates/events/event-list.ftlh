<#import "../layout.ftlh" as main>
<@main.layout>

    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="../static/scss/main.css">

    <section class="hero-section py-5">
        <div class="container text-center">
            <h1 class="display-3 fw-bold mb-3">–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è</h1>
        </div>
    </section>

    <div class="container py-4">
        <div class="d-flex flex-column flex-sm-row justify-content-center align-items-center gap-3 mb-4">
            <a href="/events/create" class="btn btn-add-event text-white rounded-pill px-4 py-2">
                <i class="fas fa-plus me-2"></i>–î–æ–±–∞–≤–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ
            </a>
        </div>

        <div class="row mb-5">
            <div class="col-12">
                <div class="card event-card featured-event shadow-lg"
                     style="background-image: url('https://images.unsplash.com/photo-1540575467063-178a50c2df87?auto=format&fit=crop&w=1200&q=80');"
                     onclick="window.location.href='/events/event/1'">
                    <div class="badge event-date px-3 py-2">20 –∏—é–Ω—è</div>
                    <div class="badge event-type-badge badge-–æ–ª–∏–º–ø–∏–∞–¥–∞ px-3 py-1">–û–ª–∏–º–ø–∏–∞–¥–∞</div>
                    <div class="event-content p-4">
                        <h2 class="event-title mb-3">–†–µ—Å–ø—É–±–ª–∏–∫–∞–Ω—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ</h2>
                        <div class="mb-2 opacity-75">
                            <i class="fas fa-user me-2"></i>–ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –ö–†
                        </div>
                        <div class="opacity-75">
                            <i class="fas fa-map-marker-alt me-2"></i>–ê–£–¶–ê, –ë–∏—à–∫–µ–∫
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <h3 class="h4 fw-semibold mb-4 text-dark">–ë–ª–∏–∂–∞–π—à–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è</h3>

        <div class="row g-4">
            <div class="col-12 col-md-6 col-xl-4">
                <div class="card event-card shadow"
                     style="background-image: url('https://images.unsplash.com/photo-1517077304055-6e89abbf09b0?auto=format&fit=crop&w=800&q=80');"
                     onclick="window.location.href='/events/event/1'">
                    <div class="badge event-date px-2 py-1">25 –∏—é–Ω—è</div>
                    <div class="badge event-type-badge badge-—Å–µ–º–∏–Ω–∞—Ä px-2 py-1">–°–µ–º–∏–Ω–∞—Ä</div>
                    <div class="event-content p-3">
                        <h4 class="event-title h5 mb-2">–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏</h4>
                        <div class="small mb-1 opacity-75">
                            <i class="fas fa-user me-1"></i>–ê—Å—Å–æ—Ü–∏–∞—Ü–∏—è —É—á–∏—Ç–µ–ª–µ–π –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏
                        </div>
                        <div class="small opacity-75">
                            <i class="fas fa-laptop me-1"></i>–û–Ω–ª–∞–π–Ω
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-12 col-md-6 col-xl-4">
                <div class="card event-card shadow"
                     style="background-image: url('https://images.unsplash.com/photo-1516321318423-f06f85e504b3?auto=format&fit=crop&w=800&q=80');"
                     onclick="window.location.href='/events/event/1'">
                    <div class="badge event-date px-2 py-1">28 –∏—é–Ω—è</div>
                    <div class="badge event-type-badge badge-–ª–µ–∫—Ü–∏—è px-2 py-1">–õ–µ–∫—Ü–∏—è</div>
                    <div class="event-content p-3">
                        <h4 class="event-title h5 mb-2">–õ–µ–∫—Ü–∏—è: –¢–µ–æ—Ä–∏—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π</h4>
                        <div class="small mb-1 opacity-75">
                            <i class="fas fa-user me-1"></i>–ü—Ä–æ—Ñ. –ò–≤–∞–Ω–æ–≤ –ê.–ò.
                        </div>
                        <div class="small opacity-75">
                            <i class="fas fa-globe me-1"></i>Zoom
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-12 col-md-6 col-xl-4">
                <div class="card event-card shadow"
                     onclick="window.location.href='/events/event/1'">
                    <div class="badge event-date px-2 py-1">1 –∏—é–ª—è</div>
                    <div class="badge event-type-badge badge-–æ–ª–∏–º–ø–∏–∞–¥–∞ px-2 py-1">–û–ª–∏–º–ø–∏–∞–¥–∞</div>
                    <div class="event-content p-3">
                        <h4 class="event-title h5 mb-2">–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–∞—è —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞</h4>
                        <div class="small mb-1 opacity-75">
                            <i class="fas fa-user me-1"></i>–ò–°–û–ú–û
                        </div>
                        <div class="small opacity-75">
                            <i class="fas fa-map-marker-alt me-1"></i>–ö–∞–∑–∞–Ω—å, –†–æ—Å—Å–∏—è
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-12 col-md-6 col-xl-4">
                <div class="card event-card shadow"
                     onclick="window.location.href='/events/event/1'">
                    <div class="badge event-date px-2 py-1">5 –∏—é–ª—è</div>
                    <div class="badge event-type-badge badge-—Å–µ–º–∏–Ω–∞—Ä px-2 py-1">–°–µ–º–∏–Ω–∞—Ä</div>
                    <div class="event-content p-3">
                        <h4 class="event-title h5 mb-2">–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏</h4>
                        <div class="small mb-1 opacity-75">
                            <i class="fas fa-user me-1"></i>CodeMath KG
                        </div>
                        <div class="small opacity-75">
                            <i class="fas fa-laptop me-1"></i>–ì–∏–±—Ä–∏–¥–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <form action="/notifications/${(isBlogSubscribed!false)?then('unsubscribe', 'subscribe')}" method="post">
        <@main.csrf/>
        <input type="hidden" name="type" value="EVENT">
        <#if (isAuthenticated!false) && (isBlogSubscribed!false)>
            <button class="btn btn-outline-danger">üîï –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</button>
        <#else>
            <button class="btn btn-outline-primary">üì© –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</button>
        </#if>
    </form>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.2/js/bootstrap.bundle.min.js"></script>
    <script>// News subscription handler
        document.addEventListener('DOMContentLoaded', function() {
            const subscriptionForm = document.querySelector('form[action="/notifications/subscribe"]');
            const subscriptionButton = subscriptionForm.querySelector('button');

            subscriptionForm.addEventListener('submit', async function(e) {
                e.preventDefault();

                const formData = new FormData(subscriptionForm);
                const isSubscribed = subscriptionButton.textContent.includes('–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è');

                try {
                    if (isSubscribed) {
                        subscriptionForm.action = '/notifications/subscribe';
                        formData.set('type', 'EVENT');
                    } else {
                        subscriptionForm.action = '/notifications/unsubscribe';
                        formData.set('type', 'EVENT');
                    }

                    subscriptionButton.disabled = true;
                    subscriptionButton.textContent = '‚è≥ –û–±—Ä–∞–±–æ—Ç–∫–∞...';

                    const response = await fetch(subscriptionForm.action, {
                        method: 'POST',
                        body: formData
                    });

                    if (response.status === 401 || response.status === 403) {
                        window.location.href = '/auth/login';
                        return;
                    }

                    if (response.ok) {
                        if (isSubscribed) {
                            showNotification('‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π!', 'success');
                            updateButtonToUnsubscribe();
                        } else {
                            showNotification('‚ùå –í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π', 'info');
                            updateButtonToSubscribe();
                        }
                    } else {
                        throw new Error('Network response was not ok');
                    }

                } catch (error) {
                    console.error('Error:', error);
                    showNotification('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', 'error');
                    if (isSubscribed) {
                        updateButtonToSubscribe();
                    } else {
                        updateButtonToUnsubscribe();
                    }
                }
            });

            function updateButtonToUnsubscribe() {
                subscriptionButton.textContent = 'üîï –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π';
                subscriptionButton.className = 'btn btn-outline-secondary';
                subscriptionButton.disabled = false;
                subscriptionForm.action = '/notifications/unsubscribe';
            }

            function updateButtonToSubscribe() {
                subscriptionButton.textContent = 'üì© –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è';
                subscriptionButton.className = 'btn btn-outline-primary';
                subscriptionButton.disabled = false;
                subscriptionForm.action = '/notifications/subscribe';
            }

            function showNotification(message, type = 'info') {
                const existingNotifications = document.querySelectorAll('.notification-toast');
                existingNotifications.forEach(notification => notification.remove());

                const notification = document.createElement('div');
                let alertType = 'info';
                if (type === 'success') {
                    alertType = 'success';
                } else if (type === 'error') {
                    alertType = 'danger';
                }
                notification.className = 'notification-toast alert alert-' + alertType + ' alert-dismissible fade show';
                notification.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1050;
            min-width: 300px;
            max-width: 500px;
            animation: slideInRight 0.3s ease-out;
        `;

                notification.innerHTML =
                    message +
                    '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>';

                if (!document.querySelector('#notification-styles')) {
                    const style = document.createElement('style');
                    style.id = 'notification-styles';
                    style.textContent = `
                @keyframes slideInRight {
                    from {
                        transform: translateX(100%);
                        opacity: 0;
                    }
                    to {
                        transform: translateX(0);
                        opacity: 1;
                    }
                }

                @keyframes slideOutRight {
                    from {
                        transform: translateX(0);
                        opacity: 1;
                    }
                    to {
                        transform: translateX(100%);
                        opacity: 0;
                    }
                }
            `;
                    document.head.appendChild(style);
                }

                document.body.appendChild(notification);

                setTimeout(() => {
                    if (notification.parentNode) {
                        notification.style.animation = 'slideOutRight 0.3s ease-in';
                        setTimeout(() => {
                            if (notification.parentNode) {
                                notification.remove();
                            }
                        }, 300);
                    }
                }, 5000);

                const closeButton = notification.querySelector('.btn-close');
                if (closeButton) {
                    closeButton.addEventListener('click', () => {
                        notification.remove();
                    });
                }
            }
        });
    </script>
</@main.layout>
